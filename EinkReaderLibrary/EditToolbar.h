/* License: COPYING.GPLv3 */
/* Copyright 2019 - present Lenovo */


#pragma once

/*
	笔迹编辑工具栏
*/

#include "MenuPen.h"

DECLARE_BUILTIN_NAME(EditToolbar)


class CEditToolbar:
	public CXuiElement<CEditToolbar,GET_BUILTIN_NAME(EditToolbar)>
{
	friend CXuiElement<CEditToolbar,GET_BUILTIN_NAME(EditToolbar)>;

public:
	ULONG InitOnCreate(
		IN IEinkuiIterator* npParent = NULL,	// 父对象指针
		IN ICfKey* npTemplete = NULL,		// npTemplete的Key ID就是EID，值就是类型EType
		IN ULONG nuEID = MAXULONG32	// 如果不为0和MAXULONG32，则指定该元素的EID; 否则，取上一个参数的模板内设置的值作为EID，如果模板也没有设置EID，则使用XUI系统自动分配
		);

	//设置按钮选中状态
	void SetSelect(ULONG nulID);
	// 设置初始化数据
	void SetData(DWORD ndwPenWidthIndex,DWORD ndwPenColorIndex);
	//任务栏隐藏
	void ToolbarShow(bool nbIsShow);
	//设置redo,undo按钮状态
	void SetUndoRedoStatus(bool nbUndoEnable, bool nbRedoEnable);
	//初始化，默认笔状态
	void init(void);
protected:
	CEditToolbar(void);
	~CEditToolbar(void);

	//初始建立，当一个元素被建立时调用，注意：子元素会先于父元素收到这条消息，从而确保父元素有一个在子元素初始化之后完成全部初始化的机会
	virtual ERESULT OnElementCreate(IEinkuiIterator* npIterator);
	//定时器
	virtual void OnTimer(
		PSTEMS_TIMER npStatus
		);
	//消息处理函数
	virtual ERESULT ParseMessage(IEinkuiMessage* npMsg);
	//按钮单击事件
	virtual ERESULT OnCtlButtonClick(IEinkuiIterator* npSender);
	//元素参考尺寸发生变化
	virtual ERESULT OnElementResized(D2D1_SIZE_F nNewSize);
	//通知元素【显示/隐藏】发生改变
	virtual ERESULT OnElementShow(bool nbIsShow);

private:
	IEinkuiIterator* mpIterBtUndo;	//undo
	IEinkuiIterator* mpIterBtRedo;	//redo
	IEinkuiIterator* mpIterBtHand;	//hand
	IEinkuiIterator* mpIterLine1;	//
	IEinkuiIterator* mpIterLine2;	//
	IEinkuiIterator* mpIterGroup;	//


	CMenuPen* mpMenuPen;

	DWORD mdwPenWidthIndex;
	DWORD mdwPenColorIndex;
	bool mbIsHand; //是否开启手写
	ULONG mulSelectID;
};

#define ET_BT_PEN 1
#define ET_BT_ERASER 2
#define ET_BT_A 3
#define ET_BT_HAND 4
#define ET_BT_UNDO 5
#define ET_BT_REDO 6